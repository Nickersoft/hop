#!/usr/bin/env node
var P=Object.create;var c=Object.defineProperty;var T=Object.getOwnPropertyDescriptor;var G=Object.getOwnPropertyNames;var I=Object.getPrototypeOf,N=Object.prototype.hasOwnProperty;var O=t=>c(t,"__esModule",{value:!0});var F=(t,o,r)=>{if(o&&typeof o=="object"||typeof o=="function")for(let e of G(o))!N.call(t,e)&&e!=="default"&&c(t,e,{get:()=>o[e],enumerable:!(r=T(o,e))||r.enumerable});return t},p=t=>F(O(c(t!=null?P(I(t)):{},"default",t&&t.__esModule&&"default"in t?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t);var k=p(require("commander")),C=p(require("ora"));var d=p(require("tmp")),h=p(require("nativefier")),g=({manifest:t,cleanup:o,icon:r})=>(process.env.ELECTRON_ENABLE_LOGGING="false",new Promise((e,n)=>{d.default.dir({keep:!0},(i,s,l)=>{i?n(i):(0,h.buildNativefierApp)({name:t.name,targetUrl:t.url,platform:"darwin",out:s,...r&&{icon:r}}).then(a=>{a?e({path:a,cleanup:()=>{l(),o()}}):n(new Error("App path is undefined! Not sure what happened :/"))}).catch(a=>n(a))})}));var f=p(require("axios")),$=p(require("js-yaml")),b=p(require("tmp")),x=p(require("fs"));var w=p(require("ajv")),y=p(require("ajv-formats")),L={type:"object",properties:{name:{type:"string"},url:{type:"string",format:"uri"},icon:{type:"string",nullable:!0}},required:["name","url"],additionalProperties:!1},v=new w.default;(0,y.default)(v);var B=v.compile(L),A=t=>B(t);var J=async t=>{let o=`https://raw.githubusercontent.com/Nickersoft/hop/master/apps/${t}/icon.png`;return new Promise((r,e)=>{b.default.dir({keep:!0},(n,i,s)=>{if(n)throw n;{let l=`${i}/icon.png`;(0,f.default)({method:"GET",url:o,responseType:"stream"}).then(({data:a})=>{a.pipe((0,x.createWriteStream)(l)),a.on("end",()=>{r({path:l,cleanup:s})}),a.on("error",u=>{e(u)})}).catch(a=>e(a))}})})},S=async t=>{let o=`https://raw.githubusercontent.com/Nickersoft/hop/master/apps/${t}/manifest.yml`;try{let{data:r}=await f.default.get(o),e=null,n=()=>{};try{let{path:s,cleanup:l}=await J(t);e=s,n=l}catch(s){}let i=$.default.load(r);if(!A(i))throw new Error(`Invalid manifest found for ${t}. Skipping installation`);return{manifest:i,icon:e,cleanup:n}}catch(r){throw r.response.status===404?new Error(`Couldn't find app: ${t}. Skipping installation.`):r}};var m=p(require("fs-extra")),E=p(require("path")),j=(t,o=!1)=>{let e=(0,m.readdirSync)(t).filter(n=>n.endsWith(".app"))?.[0];if(!e)throw new Error("Could not find app in build directory!");(0,m.moveSync)((0,E.join)(t,e),`/Applications/${e}`,{overwrite:o})};var M=new k.Command;M.version("0.0.1").command("install").argument("<apps...>").option("-f, --overwrite","overwrites the app if it already exists").action((t,{overwrite:o})=>{Promise.all(t.map(async r=>{let e=(0,C.default)(`Resolving formula '${r}'...`).start(),n=()=>{};try{let i=await S(r),s=i.manifest.name;e.text=`Building ${s}...`;let{path:l,cleanup:a}=await g(i);n=a,e.text=`Installing ${s}...`,j(l,o??!1),e.text="Cleaning up...",n(),e.succeed(`Successfully installed ${s}!`)}catch(i){e.fail(`Failed to install ${r} with error: "${i.toString()}"`),n()}}))});M.parse(process.argv);
//# sourceMappingURL=cli.js.map
